extends pug/layouts

block link
  -var selected = 'Dashboard';

block content
    .row
      .col-lg-12
        ul.nav.nav-tabs
    
    #dashboard

    .row
        .col-lg-12
          .panel.panel-default
            .panel-heading Device 1
            .panel-body
              .canvas-wrapper
                canvas#myChart.myChart(height='200', width='600')
    .row
        .col-lg-12
          .panel.panel-default
            .panel-heading Device 2
            .panel-body
              .canvas-wrapper
                canvas#myChart2.myChart(height='200', width='600')

    block scripts
      script.
          var values = [];
          var times = [];
          fetchValueByDeviceId(4);
          function fetchValueByDeviceId(id) {
            var URI = "core/api/v1/values/fetch/" + id;
            $.getJSON(URI, function(json) {
              json.Result.forEach((item) => {
                values.push(item.Value);
                var temp = new Date(item.Time);
                var timeFormated = temp.getDay() + "/" + temp.getMonth() + "/" + temp.getYear() + "-" + temp.getHours() + ":" + temp.getMinutes() + ":" + temp.getSeconds();
                times.push(timeFormated);
              });
            });
          };

         var ctx = document.getElementById("myChart");
          var data = [65, 59, 80, 95, 56, 55, 40, 67, 45, 12, 44, -20]
          var HighlightRange = {
                begin: 80,
                end: 10,
          }

          var myChart = new Chart(ctx, {
            type: 'line',
            data: {
              labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
              datasets: [{
                  fill: false,
                  lineTension: 0.1,
                  backgroundColor: "rgba(178,0,0,0.4)",
                  borderColor: "rgba(178,0,0,1)",
                  borderCapStyle: 'butt',
                  borderDash: [],
                  borderDashOffset: 0.0,
                  borderJoinStyle: 'miter',
                  pointBorderColor: "rgba(178,0,0,1)",
                  pointBackgroundColor: "#fff",
                  pointBorderWidth: 1,
                  pointHoverRadius: 5,
                  pointHoverBackgroundColor: "rgba(178,0,0,1)",
                  pointHoverBorderColor: "rgba(220,220,220,1)",
                  pointHoverBorderWidth: 2,
                  pointRadius: 1,
                  pointHitRadius: 10,
                  label: "Nhiệt độ",
                  data: data,
                  spanGaps: false,
              }],
              // This, if it exists at all, defines the highlight region.
              yHighlightRange : HighlightRange
            },
            options: {
              scales: {
                yAxes: [{
                  ticks: {
                    beginAtZero:false
                  },
                  scaleLabel: {
                    display: true,
                    labelString: '*c'
                  }
                }]
              }
            }
          });
        